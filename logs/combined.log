{"level":"info","message":"webhooks worker started...","timestamp":"2025-06-26 14:11:10"}
{"level":"info","message":"Server running on port 4000","timestamp":"2025-06-26 14:11:10"}
{"level":"info","message":"Bull Board UI available at http://localhost:4000/admin","timestamp":"2025-06-26 14:11:10"}
{"level":"info","message":"Socket.IO server ready for real-time job notifications","timestamp":"2025-06-26 14:11:10"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:11:14"}
{"level":"info","message":"submit-job requested by: {\"userId\":1,\"username\":\"ugmurthy\"} requestedJob: {\"name\":\"ollama\",\"data\":{\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"Reasearch Ideas for NIR Spectroscope device for non-destructive material detection\",\"systemPrompt\":\"You are an advanced AI planner with self-evaluation capabilities, tasked with generating a step-wise plan as a JSON object to achieve a specified goal. Your role is to create a detailed, logical, and actionable plan based on the provided tools and inputs, ensuring each step includes input/output specifications, potential transformations, and a self-evaluation mechanism. Follow these guidelines:\\n 1. **Input Analysis**:\\n   - Interpret the user's goal and available tools (e.g., {tools: [webSearch, convertToText, Summarise, CreateTweets, ExtractKeyIdeas, AnalysePatent]}).\\n   - Identify the starting input (e.g., a device description like {deviceDescription: \\\"description of text\\\"}) and the desired end result (e.g., generating tweets from novel ideas).\\n 2. **Plan Structure**:\\n- Generate a JSON object with a single key, `\\\"plan\\\"`, containing an array of step objects.\\n- Each step object must include:\\n- `\\\"step\\\"`: A numeric step identifier (starting from 1).\\n- `\\\"tool\\\"`: The tool used from the provided list.\\n- `\\\"input\\\"`: An object with:\\n- `\\\"description\\\"`: A clear description of the input data.\\n- `\\\"format\\\"`: The format of the input (e.g., plain text, JSON, PDF).\\n- `\\\"transformation\\\"`: Any preprocessing needed (e.g., converting to text, filtering, or combining data). Use \\\"None\\\" if no transformation is required.\\n- `\\\"action\\\"`: A concise description of what the tool will do.\\n- `\\\"output\\\"`: An object with:\\n- `\\\"description\\\"`: A clear description of the output data.\\n- `\\\"format\\\"`: The format of the output (e.g., plain text, structured text).\\n- `\\\"transformation\\\"`: Any post-processing needed (e.g., formatting for the next step). Use \\\"None\\\" if no transformation is required.\\n- `\\\"selfEvaluation\\\"`: An object with:\\n- `\\\"criteria\\\"`: Specific, measurable criteria to evaluate the step's success (e.g., number of results, quality, or relevance).\\n- `\\\"onSuccess\\\"`: Action to take if criteria are met (e.g., \\\"Proceed to step X\\\" or \\\"Complete plan\\\").\\n- `\\\"onFailure\\\"`: Action to take if criteria are not met (e.g., \\\"Redo [tool] with [adjustment]\\\" or \\\"Revisit step X\\\").\\n3. **Logic and Flow**:\\n   - Ensure steps are sequential and build on each other, with outputs from one step serving as inputs for the next.\\n- Account for potential format mismatches (e.g., webSearch may yield PDFs requiring convertToText).\\n- Use transformations to handle data compatibility between steps.\\n- Ensure the final step produces the desired end result.\\n4. **Self-Evaluation**:\\n- Define clear, realistic criteria for each step (e.g., minimum number of results, word count limits, or relevance checks).\\n- Provide a proceed/redo mechanism, specifying adjustments for failure (e.g., refining search terms or reprocessing data).\\n5. **Output**:\\n- Return only the JSON object containing the plan, with no additional text or explanations.\\n- Ensure the JSON is well-formed, concise, and adheres to the structure outlined above.\\nExample Goal: Using tools {tools: [webSearch, convertToText, Summarise, CreateTweets, ExtractKeyIdeas, AnalysePatent]} and a device description {deviceDescription: \\\"description of text\\\"}, generate tweets from novel ideas for the device.\\n Your task is to generate a JSON plan tailored to the user's specific goal, tools, and inputs, following the structure and logic of the example provided.\",\"max_tokens\":2048}}","timestamp":"2025-06-26 14:11:26"}
{"level":"debug","message":"/submit-job name: ollama","timestamp":"2025-06-26 14:11:26"}
{"level":"debug","message":"/submit-job data: {\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"Reasearch Ideas for NIR Spectroscope device for non-destructive material detection\",\"systemPrompt\":\"You are an advanced AI planner with self-evaluation capabilities, tasked with generating a step-wise plan as a JSON object to achieve a specified goal. Your role is to create a detailed, logical, and actionable plan based on the provided tools and inputs, ensuring each step includes input/output specifications, potential transformations, and a self-evaluation mechanism. Follow these guidelines:\\n 1. **Input Analysis**:\\n   - Interpret the user's goal and available tools (e.g., {tools: [webSearch, convertToText, Summarise, CreateTweets, ExtractKeyIdeas, AnalysePatent]}).\\n   - Identify the starting input (e.g., a device description like {deviceDescription: \\\"description of text\\\"}) and the desired end result (e.g., generating tweets from novel ideas).\\n 2. **Plan Structure**:\\n- Generate a JSON object with a single key, `\\\"plan\\\"`, containing an array of step objects.\\n- Each step object must include:\\n- `\\\"step\\\"`: A numeric step identifier (starting from 1).\\n- `\\\"tool\\\"`: The tool used from the provided list.\\n- `\\\"input\\\"`: An object with:\\n- `\\\"description\\\"`: A clear description of the input data.\\n- `\\\"format\\\"`: The format of the input (e.g., plain text, JSON, PDF).\\n- `\\\"transformation\\\"`: Any preprocessing needed (e.g., converting to text, filtering, or combining data). Use \\\"None\\\" if no transformation is required.\\n- `\\\"action\\\"`: A concise description of what the tool will do.\\n- `\\\"output\\\"`: An object with:\\n- `\\\"description\\\"`: A clear description of the output data.\\n- `\\\"format\\\"`: The format of the output (e.g., plain text, structured text).\\n- `\\\"transformation\\\"`: Any post-processing needed (e.g., formatting for the next step). Use \\\"None\\\" if no transformation is required.\\n- `\\\"selfEvaluation\\\"`: An object with:\\n- `\\\"criteria\\\"`: Specific, measurable criteria to evaluate the step's success (e.g., number of results, quality, or relevance).\\n- `\\\"onSuccess\\\"`: Action to take if criteria are met (e.g., \\\"Proceed to step X\\\" or \\\"Complete plan\\\").\\n- `\\\"onFailure\\\"`: Action to take if criteria are not met (e.g., \\\"Redo [tool] with [adjustment]\\\" or \\\"Revisit step X\\\").\\n3. **Logic and Flow**:\\n   - Ensure steps are sequential and build on each other, with outputs from one step serving as inputs for the next.\\n- Account for potential format mismatches (e.g., webSearch may yield PDFs requiring convertToText).\\n- Use transformations to handle data compatibility between steps.\\n- Ensure the final step produces the desired end result.\\n4. **Self-Evaluation**:\\n- Define clear, realistic criteria for each step (e.g., minimum number of results, word count limits, or relevance checks).\\n- Provide a proceed/redo mechanism, specifying adjustments for failure (e.g., refining search terms or reprocessing data).\\n5. **Output**:\\n- Return only the JSON object containing the plan, with no additional text or explanations.\\n- Ensure the JSON is well-formed, concise, and adheres to the structure outlined above.\\nExample Goal: Using tools {tools: [webSearch, convertToText, Summarise, CreateTweets, ExtractKeyIdeas, AnalysePatent]} and a device description {deviceDescription: \\\"description of text\\\"}, generate tweets from novel ideas for the device.\\n Your task is to generate a JSON plan tailored to the user's specific goal, tools, and inputs, following the structure and logic of the example provided.\",\"max_tokens\":2048}","timestamp":"2025-06-26 14:11:26"}
{"level":"info","message":"No options provided, using default options","timestamp":"2025-06-26 14:11:26"}
{"level":"info","message":"/submit-job: JOB SCHEDULED : 226/ollama","timestamp":"2025-06-26 14:11:26"}
{"level":"debug","message":"submit-job: jobData: {\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"Reasearch Ideas for NIR Spectroscope device for non-destructive material detection\",\"systemPrompt\":\"You are an advanced AI planner with self-evaluation capabilities, tasked with generating a step-wise plan as a JSON object to achieve a specified goal. Your role is to create a detailed, logical, and actionable plan based on the provided tools and inputs, ensuring each step includes input/output specifications, potential transformations, and a self-evaluation mechanism. Follow these guidelines:\\n 1. **Input Analysis**:\\n   - Interpret the user's goal and available tools (e.g., {tools: [webSearch, convertToText, Summarise, CreateTweets, ExtractKeyIdeas, AnalysePatent]}).\\n   - Identify the starting input (e.g., a device description like {deviceDescription: \\\"description of text\\\"}) and the desired end result (e.g., generating tweets from novel ideas).\\n 2. **Plan Structure**:\\n- Generate a JSON object with a single key, `\\\"plan\\\"`, containing an array of step objects.\\n- Each step object must include:\\n- `\\\"step\\\"`: A numeric step identifier (starting from 1).\\n- `\\\"tool\\\"`: The tool used from the provided list.\\n- `\\\"input\\\"`: An object with:\\n- `\\\"description\\\"`: A clear description of the input data.\\n- `\\\"format\\\"`: The format of the input (e.g., plain text, JSON, PDF).\\n- `\\\"transformation\\\"`: Any preprocessing needed (e.g., converting to text, filtering, or combining data). Use \\\"None\\\" if no transformation is required.\\n- `\\\"action\\\"`: A concise description of what the tool will do.\\n- `\\\"output\\\"`: An object with:\\n- `\\\"description\\\"`: A clear description of the output data.\\n- `\\\"format\\\"`: The format of the output (e.g., plain text, structured text).\\n- `\\\"transformation\\\"`: Any post-processing needed (e.g., formatting for the next step). Use \\\"None\\\" if no transformation is required.\\n- `\\\"selfEvaluation\\\"`: An object with:\\n- `\\\"criteria\\\"`: Specific, measurable criteria to evaluate the step's success (e.g., number of results, quality, or relevance).\\n- `\\\"onSuccess\\\"`: Action to take if criteria are met (e.g., \\\"Proceed to step X\\\" or \\\"Complete plan\\\").\\n- `\\\"onFailure\\\"`: Action to take if criteria are not met (e.g., \\\"Redo [tool] with [adjustment]\\\" or \\\"Revisit step X\\\").\\n3. **Logic and Flow**:\\n   - Ensure steps are sequential and build on each other, with outputs from one step serving as inputs for the next.\\n- Account for potential format mismatches (e.g., webSearch may yield PDFs requiring convertToText).\\n- Use transformations to handle data compatibility between steps.\\n- Ensure the final step produces the desired end result.\\n4. **Self-Evaluation**:\\n- Define clear, realistic criteria for each step (e.g., minimum number of results, word count limits, or relevance checks).\\n- Provide a proceed/redo mechanism, specifying adjustments for failure (e.g., refining search terms or reprocessing data).\\n5. **Output**:\\n- Return only the JSON object containing the plan, with no additional text or explanations.\\n- Ensure the JSON is well-formed, concise, and adheres to the structure outlined above.\\nExample Goal: Using tools {tools: [webSearch, convertToText, Summarise, CreateTweets, ExtractKeyIdeas, AnalysePatent]} and a device description {deviceDescription: \\\"description of text\\\"}, generate tweets from novel ideas for the device.\\n Your task is to generate a JSON plan tailored to the user's specific goal, tools, and inputs, following the structure and logic of the example provided.\",\"max_tokens\":2048,\"userId\":1}","timestamp":"2025-06-26 14:11:26"}
{"level":"info","message":"User 1 subscribed to job 226","timestamp":"2025-06-26 14:11:26"}
{"level":"info","message":"User 1 subscribed to job 226","timestamp":"2025-06-26 14:12:26"}
{"level":"info","message":"Job 226 completed with result: [object Object]","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"WORKER: webhooks 52/ollama active for 1/226/ollama","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"No webhooks configured for user 1 and event ollama","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"WORKER : 52 : ollama : completed!","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"WORKER: webhooks 53/completed active for 1/226/ollama","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"Sending completed webhook to http://localhost:4000/webhook for job 226","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"Received WEBHOOK notification \", 226/ollama","timestamp":"2025-06-26 14:13:05"}
{"level":"debug","message":"\n[object Object]\n","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"Successfully sent webhook to http://localhost:4000/webhook","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"WORKER : 53 : completed : completed!","timestamp":"2025-06-26 14:13:05"}
{"level":"info","message":"submit-job requested by: {\"userId\":1,\"username\":\"ugmurthy\"} requestedJob: {\"name\":\"dataExport\",\"data\":{\"name\":\"dataExport\",\"message\":\"DeepDownload...\",\"time\":\"2025 06 16 20:20TZ\",\"jobData\":{\"name\":\"Sales Report\",\"path\":\"/downloads/\"}}}","timestamp":"2025-06-26 14:15:34"}
{"level":"debug","message":"/submit-job name: dataExport","timestamp":"2025-06-26 14:15:34"}
{"level":"debug","message":"/submit-job data: {\"name\":\"dataExport\",\"message\":\"DeepDownload...\",\"time\":\"2025 06 16 20:20TZ\",\"jobData\":{\"name\":\"Sales Report\",\"path\":\"/downloads/\"}}","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"No options provided, using default options","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"/submit-job: JOB SCHEDULED : 227/dataExport","timestamp":"2025-06-26 14:15:34"}
{"level":"debug","message":"submit-job: jobData: {\"name\":\"dataExport\",\"message\":\"DeepDownload...\",\"time\":\"2025 06 16 20:20TZ\",\"jobData\":{\"name\":\"Sales Report\",\"path\":\"/downloads/\"},\"userId\":1}","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"User 1 subscribed to job 227","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"Job 227 progress: 50%","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"WORKER: webhooks 54/progress active for 1/227/dataExport","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"No webhooks configured for user 1 and event progress","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"WORKER : 54 : progress : completed!","timestamp":"2025-06-26 14:15:34"}
{"level":"info","message":"Job 227 progress: 100%","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"Job 227 completed with result: [object Object]","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"WORKER: webhooks 55/progress active for 1/227/dataExport","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"No webhooks configured for user 1 and event progress","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"WORKER : 55 : progress : completed!","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"WORKER: webhooks 56/completed active for 1/227/dataExport","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"Sending completed webhook to http://localhost:4000/webhook for job 227","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"Received WEBHOOK notification \", 227/dataExport","timestamp":"2025-06-26 14:15:35"}
{"level":"debug","message":"\n[object Object]\n","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"Successfully sent webhook to http://localhost:4000/webhook","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"WORKER : 56 : completed : completed!","timestamp":"2025-06-26 14:15:35"}
{"level":"info","message":"submit-job requested by: {\"userId\":1,\"username\":\"ugmurthy\"} requestedJob: {\"name\":\"paint\",\"data\":{\"name\":\"paint\",\"message\":\"Paint House...\",\"time\":\"2025 06 17 20:20TZ\",\"options\":{\"delay\":20000}}}","timestamp":"2025-06-26 14:20:57"}
{"level":"debug","message":"/submit-job name: paint","timestamp":"2025-06-26 14:20:57"}
{"level":"debug","message":"/submit-job data: {\"name\":\"paint\",\"message\":\"Paint House...\",\"time\":\"2025 06 17 20:20TZ\",\"options\":{\"delay\":20000}}","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"No options provided, using default options","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"/submit-job: JOB SCHEDULED : 228/paint","timestamp":"2025-06-26 14:20:57"}
{"level":"debug","message":"submit-job: jobData: {\"name\":\"paint\",\"message\":\"Paint House...\",\"time\":\"2025 06 17 20:20TZ\",\"options\":{\"delay\":20000},\"userId\":1}","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"User 1 subscribed to job 228","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"Job 228 failed: Error(...) is not a constructor","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"WORKER: webhooks 57/failed active for 1/228/paint","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"No webhooks configured for user 1 and event failed","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"WORKER : 57 : failed : completed!","timestamp":"2025-06-26 14:20:57"}
{"level":"info","message":"submit-job requested by: {\"userId\":1,\"username\":\"ugmurthy\"} requestedJob: {\"name\":\"ollama\",\"data\":{\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"What are the key characteristic of a Good, Reliable System Prompt for gemma3:27b - suggest a template and example as best practice\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096}}","timestamp":"2025-06-26 14:22:16"}
{"level":"debug","message":"/submit-job name: ollama","timestamp":"2025-06-26 14:22:16"}
{"level":"debug","message":"/submit-job data: {\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"What are the key characteristic of a Good, Reliable System Prompt for gemma3:27b - suggest a template and example as best practice\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096}","timestamp":"2025-06-26 14:22:16"}
{"level":"info","message":"No options provided, using default options","timestamp":"2025-06-26 14:22:16"}
{"level":"info","message":"/submit-job: JOB SCHEDULED : 229/ollama","timestamp":"2025-06-26 14:22:16"}
{"level":"debug","message":"submit-job: jobData: {\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"What are the key characteristic of a Good, Reliable System Prompt for gemma3:27b - suggest a template and example as best practice\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096,\"userId\":1}","timestamp":"2025-06-26 14:22:16"}
{"level":"info","message":"User 1 subscribed to job 229","timestamp":"2025-06-26 14:22:16"}
{"level":"info","message":"User 1 subscribed to job 229","timestamp":"2025-06-26 14:23:17"}
{"level":"info","message":"Job 229 completed with result: [object Object]","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"WORKER: webhooks 58/ollama active for 1/229/ollama","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"No webhooks configured for user 1 and event ollama","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"WORKER : 58 : ollama : completed!","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"WORKER: webhooks 59/completed active for 1/229/ollama","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"Sending completed webhook to http://localhost:4000/webhook for job 229","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"Received WEBHOOK notification \", 229/ollama","timestamp":"2025-06-26 14:24:12"}
{"level":"debug","message":"\n[object Object]\n","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"Successfully sent webhook to http://localhost:4000/webhook","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"WORKER : 59 : completed : completed!","timestamp":"2025-06-26 14:24:12"}
{"level":"info","message":"User 1 disconnected","timestamp":"2025-06-26 14:28:22"}
{"level":"info","message":"User 2 connected via Socket.IO","timestamp":"2025-06-26 14:28:36"}
{"level":"info","message":"submit-job requested by: {\"userId\":2,\"username\":\"veda\"} requestedJob: {\"name\":\"ollama\",\"data\":{\"name\":\"ollama\",\"model\":\"llama3.2\",\"prompt\":\"Write a short story about dinosaurs\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096}}","timestamp":"2025-06-26 14:29:47"}
{"level":"debug","message":"/submit-job name: ollama","timestamp":"2025-06-26 14:29:47"}
{"level":"debug","message":"/submit-job data: {\"name\":\"ollama\",\"model\":\"llama3.2\",\"prompt\":\"Write a short story about dinosaurs\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096}","timestamp":"2025-06-26 14:29:47"}
{"level":"info","message":"No options provided, using default options","timestamp":"2025-06-26 14:29:47"}
{"level":"info","message":"/submit-job: JOB SCHEDULED : 230/ollama","timestamp":"2025-06-26 14:29:47"}
{"level":"debug","message":"submit-job: jobData: {\"name\":\"ollama\",\"model\":\"llama3.2\",\"prompt\":\"Write a short story about dinosaurs\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096,\"userId\":2}","timestamp":"2025-06-26 14:29:47"}
{"level":"info","message":"User 2 subscribed to job 230","timestamp":"2025-06-26 14:29:47"}
{"level":"info","message":"Job 230 completed with result: [object Object]","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"WORKER: webhooks 60/ollama active for 2/230/ollama","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"No webhooks configured for user 2 and event ollama","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"WORKER : 60 : ollama : completed!","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"WORKER: webhooks 61/completed active for 2/230/ollama","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"No webhooks configured for user 2 and event completed","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"WORKER : 61 : completed : completed!","timestamp":"2025-06-26 14:29:57"}
{"level":"info","message":"User 2 disconnected","timestamp":"2025-06-26 14:32:51"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:32:56"}
{"level":"info","message":"webhooks worker started...","timestamp":"2025-06-26 14:36:44"}
{"level":"info","message":"Server running on port 4000","timestamp":"2025-06-26 14:36:44"}
{"level":"info","message":"Bull Board UI available at http://localhost:4000/admin","timestamp":"2025-06-26 14:36:44"}
{"level":"info","message":"Socket.IO server ready for real-time job notifications","timestamp":"2025-06-26 14:36:44"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:36:47"}
{"level":"info","message":"User 1 disconnected","timestamp":"2025-06-26 14:36:51"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:49:12"}
{"level":"info","message":"User 1 disconnected","timestamp":"2025-06-26 14:57:21"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:57:21"}
{"level":"info","message":"User 1 disconnected","timestamp":"2025-06-26 14:57:23"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:57:23"}
{"level":"info","message":"User 1 disconnected","timestamp":"2025-06-26 14:57:24"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:57:24"}
{"level":"info","message":"User 1 disconnected","timestamp":"2025-06-26 14:57:37"}
{"level":"info","message":"User 1 connected via Socket.IO","timestamp":"2025-06-26 14:57:44"}
{"level":"info","message":"submit-job requested by: {\"userId\":1,\"username\":\"ugmurthy\"} requestedJob: {\"name\":\"ollama\",\"data\":{\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"What are the key characteristic of a Good, Reliable System Prompt for gemma3:27b - suggest a template and example as best practice\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096}}","timestamp":"2025-06-26 14:58:05"}
{"level":"debug","message":"/submit-job name: ollama","timestamp":"2025-06-26 14:58:05"}
{"level":"debug","message":"/submit-job data: {\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"What are the key characteristic of a Good, Reliable System Prompt for gemma3:27b - suggest a template and example as best practice\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096}","timestamp":"2025-06-26 14:58:05"}
{"level":"info","message":"No options provided, using default options","timestamp":"2025-06-26 14:58:05"}
{"level":"info","message":"/submit-job: JOB SCHEDULED : 231/ollama","timestamp":"2025-06-26 14:58:05"}
{"level":"debug","message":"submit-job: jobData: {\"name\":\"ollama\",\"model\":\"gemma3:27b\",\"prompt\":\"What are the key characteristic of a Good, Reliable System Prompt for gemma3:27b - suggest a template and example as best practice\",\"systemPrompt\":\"You are a helpful assistant\",\"max_tokens\":4096,\"userId\":1}","timestamp":"2025-06-26 14:58:05"}
{"level":"info","message":"User 1 subscribed to job 231","timestamp":"2025-06-26 14:58:05"}
{"level":"info","message":"Job 231 completed with result: [object Object]","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"WORKER: webhooks 62/ollama active for 1/231/ollama","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"No webhooks configured for user 1 and event ollama","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"WORKER : 62 : ollama : completed!","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"WORKER: webhooks 63/completed active for 1/231/ollama","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"Sending completed webhook to http://localhost:4000/webhook for job 231","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"Received WEBHOOK notification \", 231/ollama","timestamp":"2025-06-26 14:59:42"}
{"level":"debug","message":"\n[object Object]\n","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"Successfully sent webhook to http://localhost:4000/webhook","timestamp":"2025-06-26 14:59:42"}
{"level":"info","message":"WORKER : 63 : completed : completed!","timestamp":"2025-06-26 14:59:42"}
