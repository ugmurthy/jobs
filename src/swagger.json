{
  "openapi": "3.0.0",
  "info": {
    "title": "JobRunner API Documentation",
    "version": "1.0.0",
    "description": "API documentation for the JobRunner backend service",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "contact": {
      "name": "Muve Solutions LLP",
      "url": "https://example.com",
      "email": "info@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Development server"
    },
    {
      "url": "https://api.example.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ApiKey": {
        "type": "object",
        "required": [
          "name",
          "permissions"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A descriptive name for the API key",
            "example": "My API Key"
          },
          "permissions": {
            "type": "array",
            "description": "Array of permissions granted to this key",
            "items": {
              "type": "string"
            },
            "example": [
              "read:jobs",
              "write:jobs"
            ]
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Optional expiration date for the API key",
            "example": "2025-12-31T23:59:59Z"
          }
        }
      },
      "ApiKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the API key",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user who owns this API key",
            "example": 42
          },
          "name": {
            "type": "string",
            "description": "A descriptive name for the API key",
            "example": "My API Key"
          },
          "prefix": {
            "type": "string",
            "description": "First few characters of the key (for display)",
            "example": "abc12345"
          },
          "permissions": {
            "type": "array",
            "description": "Array of permissions granted to this key",
            "items": {
              "type": "string"
            },
            "example": [
              "read:jobs",
              "write:jobs"
            ]
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "description": "When the API key was last used",
            "example": "2025-07-01T12:34:56Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the API key was created",
            "example": "2025-06-01T00:00:00Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the API key expires (null if never)",
            "example": "2025-12-31T23:59:59Z"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the API key is active",
            "example": true
          }
        }
      },
      "ApiKeyWithSecretResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "API key created successfully"
          },
          "apiKey": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the API key",
                "example": 1
              },
              "userId": {
                "type": "integer",
                "description": "ID of the user who owns this API key",
                "example": 42
              },
              "name": {
                "type": "string",
                "description": "A descriptive name for the API key",
                "example": "My API Key"
              },
              "prefix": {
                "type": "string",
                "description": "First few characters of the key (for display)",
                "example": "abc12345"
              },
              "permissions": {
                "type": "array",
                "description": "Array of permissions granted to this key",
                "items": {
                  "type": "string"
                },
                "example": [
                  "read:jobs",
                  "write:jobs"
                ]
              },
              "lastUsed": {
                "type": "string",
                "format": "date-time",
                "description": "When the API key was last used",
                "example": null
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "When the API key was created",
                "example": "2025-06-01T00:00:00Z"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "When the API key expires (null if never)",
                "example": "2025-12-31T23:59:59Z"
              },
              "isActive": {
                "type": "boolean",
                "description": "Whether the API key is active",
                "example": true
              },
              "key": {
                "type": "string",
                "description": "The full API key (only shown once upon creation)",
                "example": "abc12345def67890ghi12345jkl67890mno12345pqr67890"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        },
        "example": {
          "message": "Invalid input data",
          "code": "VALIDATION_ERROR"
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Operation completed successfully"
          }
        }
      },
      "Job": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier",
            "example": "job_123456"
          },
          "name": {
            "type": "string",
            "description": "Job name",
            "example": "dataExport"
          },
          "data": {
            "type": "object",
            "description": "Job data payload",
            "example": {
              "format": "csv",
              "filters": {
                "date": "2025-06-28"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "active",
              "completed",
              "failed",
              "delayed"
            ],
            "description": "Current job status",
            "example": "active"
          },
          "progress": {
            "type": "number",
            "description": "Job progress percentage (0-100)",
            "example": 75
          },
          "result": {
            "type": "object",
            "description": "Job execution result",
            "example": {
              "fileUrl": "https://example.com/exports/data.csv",
              "recordCount": 1250
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-06-28T12:00:00Z"
          }
        }
      },
      "JobSubmitRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Job name",
            "example": "dataExport"
          },
          "data": {
            "type": "object",
            "description": "Job data payload",
            "example": {
              "format": "csv",
              "filters": {
                "date": "2025-06-28"
              }
            }
          }
        }
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier",
            "example": "job_123456"
          },
          "name": {
            "type": "string",
            "description": "Job name",
            "example": "dataExport"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "active",
              "completed",
              "failed",
              "delayed"
            ],
            "description": "Current job status",
            "example": "active"
          },
          "progress": {
            "type": "number",
            "description": "Job progress percentage (0-100)",
            "example": 75
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-06-28T12:00:00Z"
          }
        }
      },
      "ScheduleOptions": {
        "type": "object",
        "properties": {
          "cron": {
            "type": "string",
            "description": "Cron expression (e.g., \"0 0 * * *\" for daily at midnight)",
            "example": "0 0 * * *"
          },
          "repeat": {
            "type": "object",
            "properties": {
              "every": {
                "type": "number",
                "description": "Repeat interval in milliseconds",
                "example": 3600000
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of repetitions",
                "example": 24
              }
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "When to start the job",
            "example": "2025-07-01T00:00:00.000Z"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "When to stop scheduling the job",
            "example": "2025-12-31T00:00:00.000Z"
          },
          "tz": {
            "type": "string",
            "description": "Timezone for cron expressions",
            "example": "America/New_York"
          }
        }
      },
      "ScheduledJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Scheduler ID",
            "example": "1-dataExport-1625097600000"
          },
          "name": {
            "type": "string",
            "description": "Job name",
            "example": "dataExport"
          },
          "data": {
            "type": "object",
            "description": "Job data",
            "example": {
              "format": "csv",
              "filters": {
                "date": "2025-06-28"
              }
            }
          },
          "options": {
            "type": "object",
            "description": "Job options",
            "example": {
              "removeOnComplete": {
                "count": 3
              },
              "removeOnFail": {
                "count": 5
              }
            }
          },
          "nextRun": {
            "type": "string",
            "format": "date-time",
            "description": "Next scheduled run time",
            "example": "2025-07-01T00:00:00.000Z"
          }
        }
      },
      "ScheduleJobRequest": {
        "type": "object",
        "required": [
          "name",
          "data",
          "schedule"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Job name",
            "example": "dataExport"
          },
          "data": {
            "type": "object",
            "description": "Job data payload",
            "example": {
              "format": "csv",
              "filters": {
                "date": "2025-06-28"
              }
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptions"
          },
          "options": {
            "type": "object",
            "description": "Job options (same as regular jobs)",
            "example": {
              "removeOnComplete": {
                "count": 3
              },
              "removeOnFail": {
                "count": 5
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier",
            "example": "user_123456"
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password (hashed)",
            "example": "********"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-06-28T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-06-28T12:00:00Z"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier",
            "example": "user_123456"
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "john.doe@example.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-06-28T12:00:00Z"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "securePassword123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier",
            "example": "webhook_123456"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL",
            "example": "https://example.com/webhooks/callback"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events to trigger this webhook",
            "example": [
              "job.completed",
              "job.failed"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the webhook is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-06-28T12:00:00Z"
          }
        }
      },
      "WebhookCreateRequest": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL",
            "example": "https://example.com/webhooks/callback"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events to trigger this webhook",
            "example": [
              "job.completed",
              "job.failed"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the webhook is active",
            "default": true,
            "example": true
          }
        }
      },
      "WebhookUpdateRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL",
            "example": "https://example.com/webhooks/callback"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events to trigger this webhook",
            "example": [
              "job.completed",
              "job.failed"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the webhook is active",
            "example": true
          }
        }
      },
      "WebhookResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier",
            "example": "webhook_123456"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL",
            "example": "https://example.com/webhooks/callback"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events to trigger this webhook",
            "example": [
              "job.completed",
              "job.failed"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Whether the webhook is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-06-28T12:00:00Z"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/admin": {
      "get": {
        "summary": "Bull Board UI for queue monitoring",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Bull Board UI HTML page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dashboard": {
      "get": {
        "summary": "Admin dashboard",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {
                      "type": "object",
                      "properties": {
                        "totalJobs": {
                          "type": "integer",
                          "description": "Total number of jobs",
                          "example": 1250
                        },
                        "activeJobs": {
                          "type": "integer",
                          "description": "Number of active jobs",
                          "example": 25
                        },
                        "completedJobs": {
                          "type": "integer",
                          "description": "Number of completed jobs",
                          "example": 1200
                        },
                        "failedJobs": {
                          "type": "integer",
                          "description": "Number of failed jobs",
                          "example": 25
                        },
                        "totalUsers": {
                          "type": "integer",
                          "description": "Total number of users",
                          "example": 100
                        },
                        "totalWebhooks": {
                          "type": "integer",
                          "description": "Total number of webhooks",
                          "example": 50
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api-keys": {
      "get": {
        "summary": "List all API keys for the authenticated user",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API keys retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API keys retrieved successfully"
                    },
                    "apiKeys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiKeyResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new API key",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyWithSecretResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api-keys/{id}": {
      "put": {
        "summary": "Update an API key",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the API key to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A descriptive name for the API key"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of permissions granted to this key"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the API key expires (null for never)"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the API key is active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API key updated successfully"
                    },
                    "apiKey": {
                      "$ref": "#/components/schemas/ApiKeyResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "API key not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Revoke an API key",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the API key to revoke"
          }
        ],
        "responses": {
          "200": {
            "description": "API key revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API key revoked successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "API key not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login with username and password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout the current user",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "New JWT access token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/stats": {
      "get": {
        "summary": "Get dashboard statistics",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobStats": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of jobs",
                          "example": 1250
                        },
                        "pending": {
                          "type": "integer",
                          "description": "Number of pending jobs",
                          "example": 15
                        },
                        "running": {
                          "type": "integer",
                          "description": "Number of running jobs",
                          "example": 8
                        },
                        "completed": {
                          "type": "integer",
                          "description": "Number of completed jobs",
                          "example": 1180
                        },
                        "failed": {
                          "type": "integer",
                          "description": "Number of failed jobs",
                          "example": 47
                        },
                        "completionRate": {
                          "type": "number",
                          "description": "Job completion rate percentage",
                          "example": 94.4
                        }
                      }
                    },
                    "recentJobs": {
                      "type": "array",
                      "description": "List of recent jobs",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Job ID",
                            "example": "job-123456"
                          },
                          "name": {
                            "type": "string",
                            "description": "Job name",
                            "example": "Data Export"
                          },
                          "status": {
                            "type": "string",
                            "description": "Job status",
                            "enum": [
                              "pending",
                              "running",
                              "completed",
                              "failed"
                            ],
                            "example": "completed"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Job creation timestamp",
                            "example": "2025-07-06T12:30:45Z"
                          },
                          "completedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Job completion timestamp",
                            "example": "2025-07-06T12:35:12Z"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Job duration in seconds",
                            "example": 267
                          }
                        }
                      }
                    },
                    "schedulerStats": {
                      "type": "object",
                      "properties": {
                        "activeSchedules": {
                          "type": "integer",
                          "description": "Number of active scheduled jobs",
                          "example": 8
                        },
                        "totalSchedules": {
                          "type": "integer",
                          "description": "Total number of scheduled jobs",
                          "example": 12
                        },
                        "nextScheduledJob": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Next scheduled job timestamp",
                          "example": "2025-07-06T18:00:00Z"
                        }
                      }
                    },
                    "webhookStats": {
                      "type": "object",
                      "properties": {
                        "totalWebhooks": {
                          "type": "integer",
                          "description": "Total number of webhooks",
                          "example": 15
                        },
                        "activeWebhooks": {
                          "type": "integer",
                          "description": "Number of active webhooks",
                          "example": 12
                        },
                        "deliveryRate": {
                          "type": "number",
                          "description": "Webhook delivery success rate percentage",
                          "example": 98.5
                        },
                        "totalDeliveries": {
                          "type": "integer",
                          "description": "Total number of webhook deliveries",
                          "example": 1250
                        },
                        "failedDeliveries": {
                          "type": "integer",
                          "description": "Number of failed webhook deliveries",
                          "example": 19
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/submit": {
      "post": {
        "summary": "Submit a new job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSubmitRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "summary": "Get status of a specific job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the job to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Job details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "summary": "Get all jobs for the authenticated user",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "waiting",
                "active",
                "completed",
                "failed",
                "delayed"
              ]
            },
            "description": "Filter jobs by status"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Maximum number of jobs to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of jobs to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of jobs matching the criteria"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JobResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/schedule": {
      "post": {
        "summary": "Schedule a new job",
        "description": "Schedule a job to run at specified times using cron expressions or intervals",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job scheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schedulerId": {
                      "type": "string",
                      "description": "ID of the scheduled job",
                      "example": "1-dataExport-1625097600000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all scheduled jobs",
        "description": "Get all scheduled jobs for the authenticated user",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of scheduled jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scheduledJobs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ScheduledJob"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/schedule/{schedulerId}": {
      "get": {
        "summary": "Get a specific scheduled job",
        "description": "Get details of a specific scheduled job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "schedulerId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the scheduled job"
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled job details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJob"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Scheduled job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a scheduled job",
        "description": "Remove a specific scheduled job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "schedulerId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the scheduled job"
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled job removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Scheduled job removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Scheduled job not found or unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "Get all webhooks for the authenticated user",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhooks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "put": {
        "summary": "Update a webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the webhook to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the webhook to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Protected webhook notification route",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the webhook"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook notification received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Admin",
      "description": "Administrative endpoints and dashboard"
    },
    {
      "name": "API Keys",
      "description": "API key management"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard statistics and data"
    },
    {
      "name": "Jobs",
      "description": "Job management and processing"
    },
    {
      "name": "Webhooks",
      "description": "Webhook management and notifications"
    }
  ]
}